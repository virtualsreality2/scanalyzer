[tool.poetry]
name = "scanalyzer-backend"
version = "1.0.0"
description = "Backend API for Scanalyzer security report analysis"
authors = ["Scanalyzer Team"]
license = "MIT"
readme = "README.md"
python = "^3.11"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
pydantic = "^2.5.2"
pydantic-settings = "^2.1.0"
sqlalchemy = "^2.0.23"
alembic = "^1.13.0"
python-multipart = "^0.0.6"
aiofiles = "^23.2.1"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-dotenv = "^1.0.0"
pdfplumber = "^0.10.3"
python-docx = "^1.1.0"
openpyxl = "^3.1.2"
pandas = "^2.1.4"
numpy = "^1.26.2"
psutil = "^5.9.6"
memory-profiler = "^0.61.0"
sqlcipher3 = "^0.5.2"
watchdog = "^3.0.0"
croniter = "^2.0.1"
redis = "^5.0.1"
httpx = "^0.25.2"
tenacity = "^8.2.3"
structlog = "^23.2.0"
prometheus-client = "^0.19.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
black = "^23.12.0"
isort = "^5.13.2"
flake8 = "^6.1.0"
mypy = "^1.7.1"
pre-commit = "^3.6.0"
factory-boy = "^3.3.0"
faker = "^21.0.0"
freezegun = "^1.3.1"
respx = "^0.20.2"
sqlalchemy-stubs = "^0.4"
types-python-jose = "^3.3.4"
types-passlib = "^1.7.7"
types-python-dateutil = "^2.8.19"
types-redis = "^4.6.0"
types-croniter = "^2.0.0"
types-aiofiles = "^23.2.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.git
  | \.mypy_cache
  | \.pytest_cache
  | __pycache__
  | venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true
plugins = ["pydantic.mypy"]

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["."]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=app",
    "--cov-branch",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=80",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/__init__.py",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = true

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "venv",
    ".venv",
    "build",
    "dist",
    ".mypy_cache",
    ".pytest_cache",
]